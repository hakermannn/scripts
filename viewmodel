NLS([[
local firerate = 1200
cam = workspace.CurrentCamera
local smgsound = Instance.new("Sound")
smgsound.PlayOnRemove = true
smgsound.Volume = 1
smgsound.SoundId = "rbxassetid://3449329463"
workspace = owner.Character
local ITERATIONS = 8
local SPRING = {}
function SPRING.create(self, mass, force, damping, speed)
local spring = {
Target = Vector3.new();
Position = Vector3.new();
Velocity = Vector3.new();
Mass = mass or 5;
Force = force or 50;
Damping = damping or 4;
Speed = speed  or 4;
}
function spring.shove(self, force)
local x, y, z	= force.X, force.Y, force.Z
if x ~= x or x == math.huge or x == -math.huge then
x	= 0
end
if y ~= y or y == math.huge or y == -math.huge then
y	= 0
end
if z ~= z or z == math.huge or z == -math.huge then
z	= 0
end
self.Velocity	= self.Velocity + Vector3.new(x, y, z)
end
function spring.update(self, dt)
local scaledDeltaTime = math.min(dt,1) * self.Speed / ITERATIONS	
for i = 1, ITERATIONS do
local iterationForce = self.Target - self.Position
local acceleration	= (iterationForce * self.Force) / self.Mass
acceleration = acceleration - (self.Velocity * self.Damping)
self.Velocity = self.Velocity + (acceleration * scaledDeltaTime)
self.Position = self.Position + (self.Velocity * scaledDeltaTime)
end
return self.Position
end
return spring
end
local wc = SPRING.create()
local sway = SPRING.create()
local bobspeed = 1
local bobmod = .1
local alpha = .25
local hitcf = CFrame.new()
local function gb(addition, speed, modifier)
return math.sin(tick() * addition * speed) * modifier
end
local part = Instance.new("Part",workspace)
part.Transparency = 1
part.CanCollide = false
local partt = Instance.new("Part",workspace)
partt.Anchored = true
partt.Transparency = 1
partt.CanCollide = false
local pw = Instance.new("Weld",partt)
pw.Part0 = part
pw.Part1 = partt
local part2 = Instance.new("Part",workspace)
part2.Size = Vector3.new(0.522, 1.765, 4.087)
part2.Material = "Metal"
local m = Instance.new("SpecialMesh",part2)
m.MeshId = "rbxassetid://430355132"
m.TextureId = "rbxassetid://430355010"
m.Scale = Vector3.new(0.0015,0.0015,0.0015)
owner.Character.Archivable = true
owner.Character.Archivable = false
part.CanCollide = false
local part3 = Instance.new("Part",workspace)
part3.Size = Vector3.new(0.522, 1.765, 2.087)
part3.Material = "Metal"
part3.CanCollide = false
local m = Instance.new("SpecialMesh",part3)
m.MeshId = "rbxassetid://430355263"
m.TextureId = "rbxassetid://430355010"
m.Scale = Vector3.new(0.00145,0.0015,0.0015)
local part4 = Instance.new("Part",workspace)
part4.Size = Vector3.new(0.522, 0.765, 1.087)
part4.Material = "Metal"
part4.CanCollide = false
local m = Instance.new("SpecialMesh",part4)
m.MeshId = "rbxassetid://430355191"
m.TextureId = "rbxassetid://430355010"
m.Scale = Vector3.new(0.0015,0.0015,0.0015)
local w5 = Instance.new("Weld",part2)
w5.Part0 = part4
w5.Part1 = part2
w5.C1 = CFrame.new(0.035,0.4375,1.55)
local w4 = Instance.new("Weld",part2)
w4.Part0 = part3
w4.Part1 = part2
w4.C1 = CFrame.new(-0.025,0.09,0.865)
local rr = Instance.new("Part",workspace)
local m = Instance.new("SpecialMesh",rr)
m.MeshId = "rbxassetid://488154609"
m.Scale = Vector3.new(0.01, 0.02, 0.01)
rr.Color = Color3.fromRGB(242, 243, 243)
local rl = Instance.new("Part",workspace)
local m = Instance.new("SpecialMesh",rl)
m.MeshId = "rbxassetid://488154609"
m.Scale = Vector3.new(0.01, 0.02, 0.01)
rl.Color = Color3.fromRGB(242, 243, 243)
rr.Size = Vector3.new(1,4,1)
rl.Size = Vector3.new(1,4,1)
function glove(arm)
if arm == rl then
local g = Instance.new("Part",workspace)
local m = Instance.new("SpecialMesh",g)
m.MeshId = "rbxassetid://6059005942"
m.Scale = Vector3.new(0.02,0.02,0.02)
g.CanCollide = false
g.Color = Color3.fromRGB(47, 47, 47)
local wel = Instance.new("Weld",arm)
wel.Part0 = g
wel.Part1 = arm
wel.C1 = CFrame.new(0,-1.5,0)
wel.C0 = CFrame.Angles(math.rad(90),0,math.rad(-90))
return g
else
local g = Instance.new("Part",workspace)
local m = Instance.new("SpecialMesh",g)
m.MeshId = "rbxassetid://6059005942"
m.Scale = Vector3.new(0.02,0.02,0.02)
g.CanCollide = false
g.Color = Color3.fromRGB(47, 47, 47)
local wel = Instance.new("Weld",arm)
wel.Part0 = g
wel.Part1 = arm
wel.C1 = CFrame.new(0,-1.5,0)
wel.C0 = CFrame.Angles(math.rad(-90),0,math.rad(-90))
return g
end
end
local g1 = glove(rr)
local g2 = glove(rl)
local w = Instance.new("Weld",part)
w.Part0 = rr
w.Part1 = part
w.C1 = CFrame.new(-1.5,-1.5,2.5) * CFrame.Angles(math.rad(92),math.rad(-2),math.rad(175))
local w2 = Instance.new("Weld",rr)
w2.Part0 = part2
w2.Part1 = rr
w2.C1 = CFrame.new(-0.3,-1.75,-0.5)
w2.C0 = CFrame.Angles(math.rad(-90),math.rad(180),0)
local w3 = Instance.new("Weld",part)
w3.Part0 = rl
w3.Part1 = part
w3.C1 = CFrame.new(0.35,-1.9,4.55) * CFrame.Angles(math.rad(70),math.rad(0),math.rad(215))
c1 = CFrame.new(-1.5,-1.5,2.5) * CFrame.Angles(math.rad(90),math.rad(0),math.rad(175))
c2 = CFrame.new(0.85,-1.9,5.55) * CFrame.Angles(math.rad(70),math.rad(0),math.rad(215))
hitcf = CFrame.new(0,0,0)
rr.CanCollide = false
rl.CanCollide = false
part2.CanCollide = false
rr.Transparency = 0
rl.Transparency = 0
local shooting = false
local shootsway = firerate/1200
game:GetService("RunService").RenderStepped:Connect(function(dt)
rr.Transparency = 0
rl.Transparency = 0
g1.Transparency = 0
g2.Transparency = 0
part2.Transparency = 0
part3.Transparency = 0
part4.Transparency = 0
rr.LocalTransparencyModifier = 0
rl.LocalTransparencyModifier = 0
g1.LocalTransparencyModifier = 0
g2.LocalTransparencyModifier = 0
part2.LocalTransparencyModifier = 0
part3.LocalTransparencyModifier = 0
part4.LocalTransparencyModifier = 0
delta = game:GetService("UserInputService"):GetMouseDelta()
partt.CFrame = cam.CFrame * CFrame.new(0,0,1) * CFrame.Angles(0,math.rad(180),0)
if not shooting then
local vel = owner.Character.HumanoidRootPart.Velocity
local msway = Vector3.new(gb(10, bobspeed, bobmod), gb(5, bobspeed, bobmod), gb(5, bobspeed, bobmod))
sway:shove(Vector3.new(delta.X / 500, delta.Y / 500))
wc:shove((msway / 25) * dt * 60 * math.clamp(vel.Magnitude,0,30))
local sw = sway:update(dt)
local wcs = wc:update(dt)
w.C1 = w.C1:Lerp(c1, alpha) * hitcf
w.C1 = w.C1:Lerp(c1 * CFrame.new(wcs.x / 2, wcs.y / 2,0), .25)
w.C1 = w.C1 * CFrame.Angles(0,-(sw.x), sw.y / 2)
w.C1 = w.C1:Lerp(w.C1 * CFrame.Angles(0, wcs.y / 2, wcs.x / 2), .25)
w3.C1 = w3.C1:Lerp(c2, alpha) * hitcf
w3.C1 = w3.C1:Lerp(c2 * CFrame.new(-sw.x + -wcs.y,-sw.x,math.abs(sw.y) + wcs.y), .25)
w3.C1 = w3.C1 * CFrame.Angles(0,-sw.x * 2, sw.y)
w3.C1 = w3.C1:Lerp(w.C1 * CFrame.Angles(0, -wcs.y, wcs.x / 2), .25)
else
local vel = owner.Character.HumanoidRootPart.Velocity
shootsway = (firerate * math.clamp((vel.Magnitude / 2),1,15))/1200
end
end)
local cfval = Instance.new("CFrameValue")
cfval.Changed:Connect(function(val)
pw.C1 = val
end)
local tweenService = game:GetService("TweenService")
coroutine.wrap(function()
while task.wait() do
if shooting then
local tweenInfo = TweenInfo.new(20/firerate,Enum.EasingStyle.Quint,Enum.EasingDirection.Out)
local goal = {}
goal.C1 = CFrame.new(0.035,0.4375,1.15)
local tween = tweenService:Create(w5, tweenInfo, goal)
tween:Play()
tween.Completed:Wait()
wait(20/firerate)
local tweenInfo = TweenInfo.new(20/firerate,Enum.EasingStyle.Quint,Enum.EasingDirection.Out)
local goal = {}
goal.C1 = CFrame.new(0.035,0.4375,1.55)
local tween = tweenService:Create(w5, tweenInfo, goal)
tween:Play()
tween.Completed:Wait()
end
end
end)()
local count = 0
coroutine.wrap(function()
while task.wait() do
if shooting then
local rand2 = (Random.new():NextNumber(-1,1)*math.sin(45*tick()))
count = count + 1
if count == 1 then
cfval.Value = cfval.Value:Lerp(CFrame.new(0,-2,-1) * CFrame.Angles(math.rad(-20),0,0),0.1)
elseif count == 2 then
count = 0
cfval.Value = cfval.Value:Lerp(CFrame.new(0,-2.2,-1.3) * CFrame.Angles(math.rad(-23),0,0),0.1)
end
pw.C0 = CFrame.Angles(0,math.rad(rand2 * shootsway),0)
smgsound.Pitch = Random.new():NextNumber(1,1.2)
smgsound.Parent = workspace
smgsound.Parent = nil
wait(60/firerate)
end
end
end)()
mouse = owner:GetMouse()
mouse.Button1Down:Connect(function()
shooting = true
end)
mouse.Button1Up:Connect(function()
shooting = false
end)
while task.wait() do
if not shooting then
cfval.Value = cfval.Value:Lerp(CFrame.new(0,0,0),0.15)
pw.C0 = pw.C0:Lerp(CFrame.Angles(0,0,0),0.15)
else
cfval.Value = cfval.Value:Lerp(CFrame.new(0,0,0),0.04)
pw.C0 = pw.C0:Lerp(CFrame.Angles(0,0,0),0.04)
end
end
]],owner.PlayerGui)
